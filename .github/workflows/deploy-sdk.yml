name: Deploy SDK

on:
  workflow_dispatch:

env:
  PROJECTS_BUILD: './src/Milochau.Core.sln'
  PROJECTS_SDK: './src/Milochau.Core.Sdk.sln'
  VERSION_FILE: './src/Directory.Build.props'
  NUGET_URL: 'https://nuget.pkg.github.com/milochaucom/index.json'
  DOTNET_VERSION: 5.0.x
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Get current version
        shell: pwsh
        run: |
          [xml]$xmlDocument = Get-Content -Path ${{ env.VERSION_FILE }}
          $version = "v" + $xmlDocument.Project.PropertyGroup.Version
          echo "VERSION_NUMBER=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
          $exp = '^v(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$'
          $match = ($version -match $exp).ToString().ToLower()
          echo "VERSION_PRERELEASE=$match" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append
      - name: Check prerelease if not main branch
        if: ${{ github.ref != 'refs/heads/main' && env.VERSION_PRERELEASE != 'true' }}
        run: |
          echo You can not publish a pre-release package if you are not in the main branch
          echo Version: ${{ env.VERSION_NUMBER }}
          echo Pre-release: ${{ env.VERSION_PRERELEASE }}
          echo Branch: ${{ github.ref }}
          exit 1
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
          source-url: ${{ env.NUGET_URL }}
        env:
          NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Restore dependencies
        run: dotnet restore ${{ env.PROJECTS_BUILD }}
      - name: Build application
        run: dotnet build ${{ env.PROJECTS_BUILD }} --configuration Release --no-restore
      - name: Pack SDK
        run: dotnet pack ${{ env.PROJECTS_SDK }} --configuration Release --no-restore --no-build --output ./build
      - name: Upload SDK as artifact
        uses: actions/upload-artifact@v2
        with:
          name: sdk
          path: ./build
      - name: Publish SDK to GPR
        run: dotnet nuget push ./build/*.nupkg
      - name: Create GitHub Release
        run: |
          if [ ${{ env.VERSION_PRERELEASE }} == 'true' ];
          then
            gh release create ${{ env.VERSION_NUMBER }} --notes "Version ${{ env.VERSION_NUMBER }}" --draft --prerelease
          else
            gh release create ${{ env.VERSION_NUMBER }} --notes "Version ${{ env.VERSION_NUMBER }}" --draft
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
